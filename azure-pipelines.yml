trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'AzureConnection-UAMI'
  functionAppName: 'iothubandroid'
  resourceGroup: 'iothost'
  buildConfig: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET 8.0 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfig) --no-restore'

# Reemplazar el paso de publish con esto:
- task: DotNetCoreCLI@2
  displayName: 'Publish optimized for Functions'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfig) --output $(Build.ArtifactStagingDirectory)/output --no-build --self-contained false'
    zipAfterPublish: false
    modifyOutputPath: false

# Crear ZIP manualmente con exclusiones
- task: ArchiveFiles@2
  displayName: 'Create optimized deployment package'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/function-app.zip'
    replaceExistingArchive: true

- task: AzureFunctionApp@2
  displayName: 'Deploy Azure Function App v2'
  inputs:
    connectedServiceNameARM: '$(azureSubscription)'
    appType: 'functionApp'
    appName: '$(functionAppName)'
    package: '$(Build.ArtifactStagingDirectory)/function-app.zip'
    runtimeStack: 'DOTNET-ISOLATED|8.0'
    appSettings: |
      -FUNCTIONS_EXTENSION_VERSION ~4
      -FUNCTIONS_WORKER_RUNTIME dotnet-isolated
      -WEBSITE_RUN_FROM_PACKAGE 0
    deploymentMethod: 'zipDeploy'
