trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'AzureConnection-UAMI'  # Your service connection name
  functionAppName: 'iothubandroid'                   # Your Azure Function App name
  resourceGroup: 'iothost'                   # <--- Agrega el nombre de tu resource group aquÃ­
  buildConfig: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/publish_output'
  zipPath: '$(Build.ArtifactStagingDirectory)/app.zip'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'  # This ensures the .NET SDK 8.0 is used for your build

- script: |
    dotnet publish --configuration $(buildConfig) --framework net8.0 --output $(outputDir)
    powershell -Command "Compress-Archive -Path $(outputDir)\* -DestinationPath $(zipPath)"
  displayName: 'Publish and Zip .NET 8.0 Isolated Function'

- task: AzureCLI@2
  displayName: 'Stop Function App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az functionapp stop --name $(functionAppName) --resource-group $(resourceGroup)

- task: AzureFunctionApp@2
  inputs:
    connectedServiceNameARM: 'AzureConnection-UAMI'
    appType: 'functionApp'
    isFlexConsumption: true
    appName: '$(functionAppName)'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'

- task: AzureCLI@2
  displayName: 'Start Function App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az functionapp start --name $(functionAppName) --resource-group $(resourceGroup)